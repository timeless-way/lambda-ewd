@@grammar :: EWD

start = expression $ ;

expression
    =   identifier
    |   abstraction
    |   application
    ;
    
identifier = /[a-zA-Z]/ ;

abstraction
    =   lambda_abstraction
    |   fun_abstraction
    ;

mapping_case
    =   { {pattern}+ '->' expression }*
    ;
    
fun_abstraction
    =   'fun' >mapping_case 'nuf'
    ;

lambda_abstraction
    =   'lambda' >mapping_case 'end'
    ;
    
application 
    =   '(' expression "'" expression ')'
    ;

pattern
    =   identifier
    |   '*'
    |   identifier ':' pattern
    ;